#!/bin/bash

readonly VIM_HOME="$HOME/.vim"
readonly VIM_AUTOLOAD="$VIM_HOME/autoload"
readonly VIM_BUNDLE="$VIM_HOME/bundle"
readonly VIMRC="$HOME/.vimrc"
readonly VIM_TOGO="$(cd $(dirname $0); pwd)/togo"

CURL_CMD="curl -sSL"
GIT_CMD="git"

sslNoVerify() {
  CURL_CMD="$CURL_CMD -k"
  export GIT_SSL_NO_VERIFY=1
}

msgInfo() {
  local level=$1
  shift
  case $level in
    0) echo "$@" ;;
    1) echo "+ $@ " ;;
    2) echo "-> $@" ;;
  esac
}

msgError(){
  echo "ERROR: $@"
  exit 1
}	

runInstall() {

  case $1 in
    "--ssl-no-verify") sslNoVerify ;;
  esac

  msgInfo 0 "Running install"
  [ -d $VIM_BUNDLE ] && msgError "bundle directory found"

  msgInfo 1 "Creating .vimrc file"
  cat $VIM_TOGO/vimrc > $VIMRC

  msgInfo 1 "Installing pathogen"
  mkdir -p $VIM_AUTOLOAD
  $CURL_CMD -o $VIM_AUTOLOAD/pathogen.vim \
    https://raw.github.com/tpope/vim-pathogen/master/autoload/pathogen.vim
  cat >> $VIMRC << __EOF__
""" pathogen
execute pathogen#infect()
call pathogen#helptags()
__EOF__

  msgInfo 1 "Installing bundles"
  mkdir -p $VIM_BUNDLE

  find $VIM_TOGO -type f -name '*.sh' \
  | while read togo_bundle; do
    name="$(basename $togo_bundle .sh)"
    #Â read repo and options from file
    . "$togo_bundle"
    msgInfo 2 "$name"
    $GIT_CMD clone $repo $VIM_BUNDLE/$name
    echo "\"\"\"$name" >> $VIMRC
    echo $options >> $VIMRC
  done
}

runUpdate() {

  msgInfo 0 "Running update"
  [ ! -d $VIM_BUNDLE ] && msgError "bundle directory not found"

  # locate and update bundles
  find $VIM_BUNDLE -type d -name '.git' -exec dirname {} \; \
  | while read bundle_dir; do
    name="$(basename $bundle_dir)"
    msgInfo 2 "$name"
    cd $bundle_dir && $GIT_CMD fetch origin && $GIT_CMD pull
  done
}

case $1 in
  install) shift; runInstall $@ ;;
  update) shift; runUpdate $@ ;;
  *) echo "Usage: $0 [install|update]" ;;  
esac

exit 0
