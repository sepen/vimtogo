#!/bin/bash

readonly VIM_HOME="$HOME/.vim"
readonly VIM_AUTOLOAD="$VIM_HOME/autoload"
readonly VIM_BUNDLE="$VIM_HOME/bundle"
readonly VIMRC="$HOME/.vimrc"
readonly VIM_TOGO="$(cd $(dirname $0); pwd)/togo"

CMD_CURL="curl -sSL"
CMD_GIT="git"
CMD_SED="sed"

OPTION_FORCE=0

sslNoVerify() {
  CMD_CURL="$CMD_CURL -k"
  export GIT_SSL_NO_VERIFY=1
}

enableForce() {
  OPTION_FORCE=1
}

msgInfo() {
  local level=$1
  shift
  case $level in
    0) echo "$@" ;;
    1) echo "+ $@ " ;;
    2) echo "-> $@" ;;
  esac
}

msgError(){
  echo "ERROR: $@"
  exit 1
}	

installPathogen() {
  $CMD_CURL -o $VIM_AUTOLOAD/pathogen.vim \
    https://raw.github.com/tpope/vim-pathogen/master/autoload/pathogen.vim
  cat >> $VIMRC << __EOF__

""" pathogen
execute pathogen#infect()
call pathogen#helptags()
__EOF__
}

installBundle() {
  local bundle_file="$1"
  local bundle_name="$(basename $bundle_file)"
  local bundle_repo_uri="$($CMD_SED '2!d;s/""" *//' $bundle_file)"
  msgInfo 2 "$bundle_name"
  [ $OPTION_FORCE -eq 1 ] && rm -rf $VIM_BUNDLE/$bundle_name
  $CMD_GIT clone $bundle_repo_uri $VIM_BUNDLE/$bundle_name
  ( echo && cat $bundle_file ) >> $VIMRC
}

updateBundle() {
  local bundle_dir="$1"
  local bundle_name="$(basename $bundle_dir)"
  msgInfo 2 "$bundle_name"
  cd $bundle_dir && $CMD_GIT fetch origin && $CMD_GIT pull
}

installBundles() {
  find $VIM_TOGO -type f ! -name 'vimrc' \
  | while read togo_bundle; do
    installBundle "$togo_bundle"
  done
}

updateBundles() {
  find $VIM_BUNDLE -type d -name '.git' -exec dirname {} \; \
  | while read bundle_dir; do
    updateBundle "$bundle_dir"
  done
}

runInstall() {
  msgInfo 0 "Running install"
  while [ "$1" ]; do
    case "$1" in
      "-k"|"--ssl-no-verify") sslNoVerify ;;
      "-f"|"--force") enableForce ;;
    esac
    shift
  done

  if [ -d $VIM_BUNDLE ]; then
    if [ $OPTION_FORCE -eq 0 ]; then
      msgError "bundle directory found. Try --force to overwrite and force installation"
    fi
  fi

  msgInfo 1 "Creating .vimrc file"
  cat $VIM_TOGO/vimrc > $VIMRC

  msgInfo 1 "Installing pathogen"
  mkdir -p $VIM_AUTOLOAD
  installPathogen

  msgInfo 1 "Installing bundles"
  mkdir -p $VIM_BUNDLE
  installBundles
}

runUpdate() {
  msgInfo 0 "Running update"
  [ ! -d $VIM_BUNDLE ] && msgError "bundle directory not found"
  updateBundles
}

case $1 in
  install) shift; runInstall $@ ;;
  update) shift; runUpdate $@ ;;
  *)  echo "Usage: $0 [install|update] <option>"
      echo "Where options for commands are:"
      echo "  install"
      echo "  -k, --ssl-no-verify   No verify SSL certs for HTTPS connections"
      echo "  -f, --force           Force installation. This will overwrite exinting files"
      ;;
esac

exit 0
